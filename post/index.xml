<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on HelloF1sh</title>
    <link>http://HelloF1sh.github.io/post/</link>
    <description>Recent content in Posts on HelloF1sh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Apr 2019 01:49:23 +0800</lastBuildDate>
    
	<atom:link href="http://HelloF1sh.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LeetCode动态规划DP问题</title>
      <link>http://HelloF1sh.github.io/post/leetcode%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92dp%E9%97%AE%E9%A2%98%E6%9C%89%E7%A9%BA%E5%B0%B1%E5%86%99%E5%86%99%E4%BA%86%E5%B0%B1%E6%9B%B4/</link>
      <pubDate>Fri, 05 Apr 2019 01:49:23 +0800</pubDate>
      
      <guid>http://HelloF1sh.github.io/post/leetcode%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92dp%E9%97%AE%E9%A2%98%E6%9C%89%E7%A9%BA%E5%B0%B1%E5%86%99%E5%86%99%E4%BA%86%E5%B0%B1%E6%9B%B4/</guid>
      <description>53.最大的子序和 给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。
示例:
输入: [-2,1,-3,4,-1,2,1,-5,4], 输出: 6 解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。  想法
设置一个maxSum[]数组，记录范围为[0,..i]的子序列中的最大连续和。
当i = 0时，maxSum = nums[i];
当 maxSum[i-1] &amp;lt; 0时，即第i个的前面最大连续和为负数时，maxSum = nums[i],即重新开始计算最大和;
当maxSum[i-1] &amp;gt; 0 &amp;amp;&amp;amp; i != 0时，将maxSum[i-1]加上第i个数即可。
class Solution { public int maxSubArray(int[] nums) { int len = nums.length, max = -Integer.MAX_VALUE; int [] maxSum = new int[len]; for(int i = 0; i &amp;lt; len; i++){ if(i == 0 || maxSum[i-1] &amp;lt; 0){ maxSum[i] = nums[i]; continue; } else{ maxSum[i] = nums[i] + maxSum[i-1]; } max = Math.</description>
    </item>
    
  </channel>
</rss>